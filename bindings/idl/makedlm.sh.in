#!/bin/sh
# Copyright (C) 2009, 2010, 2016 D. V. Wiebe
#
##########################################################################
#
# This file is part of the GetData project.
#
# GetData is free software; you can redistribute it and/or modify it under
# the terms of the GNU Lesser General Public License as published by the
# Free Software Foundation; either version 2.1 of the License, or (at your
# option) any later version.
#
# GetData is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU Lesser General Public
# License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with GetData; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
# 
# @configure_input@

LC_ALL=C
DATE=@DATE@
opt=$1
in=$2

if test "x$DATE" == "xnot found"; then
  BUILD_DATE="unspecified"
else
  BUILD_DATE=`date`
fi

if test "$opt" = "-c"; then
cat <<EOF
/* This code is automatically generated.  Changes made here will be lost. */
#define _LARGEFILE64_SOURCE 1
#include <stdio.h>
#include <idl_export.h>
EOF
else
cat <<EOF
MODULE GETDATA
DESCRIPTION IDL GetData bindings
VERSION @VERSION@
BUILD_DATE $BUILD_DATE
SOURCE The GetData Project <@PACKAGE_URL@>

STRUCTURE GD_ENTRY
EOF
fi
grep @@DLM $in | sort -k 5 | {
nfunc=0
nproc=0
while read sc magic type func idl min max key extra; do if test "$opt" = "-c"; then
  if test "x$key" == "xKEYWORDS"; then key=IDL_SYSFUN_DEF_F_KEYWORDS; else key=0; fi
  if test $type == "F"; then
    echo "extern IDL_VPTR $func(int argc, IDL_VPTR argv[], char *argk);"
    if test -n "$funcstruct"; then funcstruct="$funcstruct, "; fi
    funcstruct="$funcstruct
    { { (IDL_SYSRTN_GENERIC)$func }, \"$idl\", $min, $max, $key, 0 }"
    (( nfunc=nfunc+1 ))
  else
    echo "extern void $func(int argc, IDL_VPTR argv[], char *argk);"
    if test -n "$procstruct"; then procstruct="$procstruct, "; fi
    procstruct="$procstruct
    { { (IDL_SYSRTN_GENERIC)$func }, \"$idl\", $min, $max, $key, 0 }"
    (( nproc=nproc+1 ))
  fi
else
  if test "x$key" == "xKEYWORDS"; then key=" KEYWORDS"; else key=; fi
  if test $type == "F"; then type="FUNCTION "; else type="PROCEDURE"; fi
  echo "$type $idl $min $max$key"
fi; done
if test "$opt" = "-c"; then
  echo "int gdidl_n_procs=$nproc; IDL_SYSFUN_DEF2 gdidl_procs[] = { $procstruct };"
  echo "int gdidl_n_funcs=$nfunc; IDL_SYSFUN_DEF2 gdidl_funcs[] = { $funcstruct };"
fi; }
