.\" header.tmac.  GetData manual macros.
.\"
.\" Copyright (C) 2016 D. V. Wiebe
.\"
.\""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
.\"
.\" This file is part of the GetData project.
.\"
.\" Permission is granted to copy, distribute and/or modify this document
.\" under the terms of the GNU Free Documentation License, Version 1.2 or
.\" any later version published by the Free Software Foundation; with no
.\" Invariant Sections, with no Front-Cover Texts, and with no Back-Cover
.\" Texts.  A copy of the license is included in the `COPYING.DOC' file
.\" as part of this distribution.

.\" Format a function name with optional trailer: func_name()trailer
.de FN \" func_name [trailer]
.nh
.BR \\$1 ()\\$2
.hy
..

.\" Format a reference to section 3 of the manual: name(3)trailer
.de F3 \" func_name [trailer]
.nh
.BR \\$1 (3)\\$2
.hy
..

.\" Format the header of a list of definitons
.de DD \" name alt...
.ie "\\$2"" \{ \
.TP 8
.PD
.B \\$1 \}
.el \{ \
.PP
.B \\$1
.PD 0
.DD \\$2 \\$3 \}
..

.\" Start a code block: Note: groff defines an undocumented .SC for
.\" Bell Labs man legacy reasons.
.de SC
.fam C
.na
.nh
..

.\" End a code block
.de EC
.hy
.ad
.fam
..

.\" Format a structure pointer member: struct->member\fRtrailer
.de SPM \" struct member trailer
.nh
.ie "\\$3"" .IB \\$1 ->\: \\$2
.el .IB \\$1 ->\: \\$2\fR\\$3
.hy
..

.\" Format a function argument
.de ARG \" name trailer
.nh
.ie "\\$2"" .I \\$1
.el .IR \\$1 \\$2
.hy
..

.\" Hyphenation exceptions
.hw sarray carray lincom linterp
.\" gd_constants.3.  The gd_constants man page.
.\"
.\" Copyright (C) 2008, 2010, 2011, 2015, 2016 D.V. Wiebe
.\"
.\""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
.\"
.\" This file is part of the GetData project.
.\"
.\" Permission is granted to copy, distribute and/or modify this document
.\" under the terms of the GNU Free Documentation License, Version 1.2 or
.\" any later version published by the Free Software Foundation; with no
.\" Invariant Sections, with no Front-Cover Texts, and with no Back-Cover
.\" Texts.  A copy of the license is included in the `COPYING.DOC' file
.\" as part of this distribution.
.\"
.TH gd_constants 3 "25 December 2016" "Version 0.10.0" "GETDATA"

.SH NAME
gd_constants, gd_mconstants \(em retrieve a list of constant values from a Dirfile

.SH SYNOPSIS
.SC
.B #include <getdata.h>
.HP
.BI "const void *gd_constants(DIRFILE *" dirfile ", gd_type_t
.IB return_type );
.HP
.BI "const void *gd_mconstants(DIRFILE *" dirfile ", const char"
.BI * parent ", gd_type_t " return_type );
.EC

.SH DESCRIPTION
The
.FN gd_constants
function queries a dirfile(5) database specified by
.ARG dirfile
and compiles a list of values of the all
.B CONST
fields defined in the database, excluding meta subfields.  The values returned
are converted to the data type specified by
.ARG return_type .
The 
.ARG return_type 
should be one of the following symbols:
.IP
.SC
.BR GD_UINT8 ,\~ GD_INT8 ,\~ GD_UINT16 ,\~ GD_INT16 ,\~ GD_UINT32 ,\~ GD_INT32 ,
.BR GD_UINT64, \~ GD_INT64 ,\~ GD_FLOAT32 ,\~ GD_FLOAT64 ,\~ GD_COMPLEX64 ,
.BR GD_COMPLEX128 .
.EC
.PP
See
.F3 gd_get_constant
for the meaning of these symbols.  The 
.ARG dirfile
argument must point to a valid DIRFILE object previously created by a call to
.F3 gd_open .

The
.FN gd_mconstants
function returns the same list for
.B CONST
meta subfields of the parent field specified by
.ARG parent .

A corresponding list of names for these fields may be obtained by calling
.F3 gd_field_list_by_type
or
.F3 gd_mfield_list_by_type .

.SH RETURN VALUE
Upon successful completion,
.FN gd_constants
returns a pointer to an array containing the values of all the constants defined
in the dirfile database.  Similarly,
.FN gd_mconstants
returns a pointer to an array containing the values of the all the meta subfield
constants of the specified parent field.

The list returned should not be assumed to be in any particular order, although
it is guaranteed to be in the same order as the list of
.B CONST
fields returned by
.F3 gd_field_list_by_type
or
.F3 gd_mfield_list_by_type .
The array is unterminated.  The number of values in the array can be obtained
from a call to
.F3 gd_nfields_by_type
or
.F3 gd_nmfields_by_type ,
as appropriate.

Memory for the returned array is managed by GetData and should not be
de-allocated by the caller.  The caller may not modify any values in the array.
Doing so may cause database corruption.  The pointer returned is guaranteed to
be valid only until the function is called again, with the exception that, since
each top-level field maintains its own arrays, calling
.FN gd_mconstants
for a one parent field does not invalidate the pointer returned for a any other
parent.

Modifying the dirfile's metadata invalidates any pointer returned by these
functions.  And no pointers remain valid after the dirfile is de-allocated by a
call to
.F3 gd_close
or
.F3 gd_discard .
Once a pointer is invalidated, the caller should not dereference it.

If no constants of the appropriate class are defined in the database, NULL is
returned.  This is not considered an error.

On error, these functions return NULL and store a negative-valued error code in
the
.B DIRFILE
object which may be retrieved by a subsequent call to
.F3 gd_error .
Possible error codes are:
.DD GD_E_ALLOC
The library was unable to allocate memory.
.DD GD_E_BAD_CODE
The specified
.ARG parent
field code was not found, or referred to a metafield
.RB ( gd_mconstants ()
only).
.DD GD_E_BAD_DIRFILE
The supplied dirfile was invalid.
.DD GD_E_BAD_TYPE
The
.ARG return_type
specified was not one of the symbols listed above.
.DD GD_E_INTERNAL_ERROR
An internal error occurred in the library while trying to perform the task.
This indicates a bug in the library.  Please report the incident to the
GetData developers.
.PP
A descriptive error string for the error may be obtained by calling
.F3 gd_error_string .

.SH HISTORY
The functions
.FN get_constants
and
.FN get_mconstants
appeared in GetData-0.4.0.

In GetData-0.7.0, these functions were renamed to
.FN gd_constants
and
.FN gd_mconstants .

.SH SEE ALSO
.F3 gd_error ,
.F3 gd_error_string ,
.F3 gd_field_list_by_type ,
.F3 gd_get_constant ,
.F3 gd_mfield_list_by_type ,
.F3 gd_nfields_by_type ,
.F3 gd_nmfields_by_type ,
.F3 gd_open ,
dirfile(5)
